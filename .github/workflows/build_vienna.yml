name: Build Vienna

on:
  push:
    branches:
      - "develop"
env:
  NVM_PATH: $HOME/.nvm/nvm.sh
  VERSION: 8.5r8.build${{ github.run_number }}
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'vunetsystems'
    name: Build Vienna
    env:
      NODE_VERSION: 6.12.2
    steps:
      - name: Install NVM and set default
        run: |
          export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" 
          nvm install ${{ env.NODE_VERSION }}
          nvm alias default ${{ env.NODE_VERSION }}
          echo ${{ env.NVM_PATH }}
      - uses: actions/checkout@v2
        # This is a workaround, Otherwise we have to fetch whole repo which is very large
      - name: Init GIT
        run: |
          git init
          git add -v .
          git config --global user.email "dev1@vunetsystems.com"
          git config --global user.name "Dev 1"
          git commit -am INIT-${{ github.sha }}
        working-directory: desktop
        # For older version of node we have to call nvm like this, There can be other ways but this works!
      - name: Install Vega Vis Dependencies
        working-directory: desktop/plugins/vega_vis
        run: |
          export NVM_DIR="$HOME/.nvm" && [ -f "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && nvm use ${{ env.NODE_VERSION }}
          npm install
      - name: Install Dependencies
        working-directory: desktop
        run: |
          export NVM_DIR="$HOME/.nvm" && [ -f "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && nvm use ${{ env.NODE_VERSION }}
          npm install
          npm install phantomjs-prebuilt
        # In later version we should use npm ci
      - name: Build
        working-directory: desktop
        run: |
          export NVM_DIR="$HOME/.nvm" && [ -f "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && nvm use ${{ env.NODE_VERSION }}
          npm run build -- --skip-os-packages
      - run: tar czpvf vienna.tgz -C desktop/build/kibana-6.1.3-SNAPSHOT-linux-x86_64 .
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: vienna
          path: vienna.tgz

  build-mobile:
    runs-on: ubuntu-latest
    name: Build Mobile Views
    env:
      CYPRESS_INSTALL_BINARY: 0
      NODE_MOBILE_VERSION: 14
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
          # TODO: Cache dosn't work https://github.com/actions/setup-node/issues/282
          # cache: 'npm'

      - name: Check node version
        run: |
          node -v
        working-directory: mobile

      - name: Install Dependencies
        working-directory: mobile
        run: npm ci

      - name: Build Mobile
        working-directory: mobile
        run: npm run build

      - name: Tar build
        run: tar czpvf mobile.tgz -C mobile/dist/apps/colombo/ .

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: mobile
          path: mobile.tgz
          
  create-release:
    name: Create Release
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    needs: 
      - build
      - build-mobile
    
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          artifacts: "vienna/vienna.tgz,mobile/mobile.tgz"
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Delete Artifact
        uses: GeekyEggo/delete-artifact@v1.0.0
        with:
          name: |
            mobile
            vienna
