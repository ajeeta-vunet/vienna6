// This file is automatically generated using pluto meta-file framework
// Please do not make any change in this file directly.
'use strict';
import _ from 'lodash';
class healthbeatAddDataSourceCtrl {
  constructor ($scope, StateService, $uibModalInstance) {

    $scope.editDataSource = false;
    $scope.data_obj = {};
    $scope.first_step = $uibModalInstance.first_step;
    $scope.second_step = $uibModalInstance.second_step;
    $scope.third_step = $uibModalInstance.third_step;
    $scope.index = $uibModalInstance.index;
    $scope.data = $uibModalInstance.data;
    $scope.fourth_step = $uibModalInstance.fourth_step;
    

    
       
    
    
    
       
    
       
    
    

    $scope.vendorList = [];
    $scope.deviceList = [];  
    // get the device and vendor information
    StateService.getVendorAndDeviceList().then(function (data) {
      $scope.vendorList = data.vendor_list;
      $scope.deviceList = data.device_list;
    });


    // if row is present then, edit modal function is called.
    if ($uibModalInstance.row) {
      $scope.editDataSource = true;
      
         $scope.name = $uibModalInstance.row.name;
       
      
         $scope.port = $uibModalInstance.row.port;
       
      
         $scope.ssl = $uibModalInstance.row.ssl;
       
      
         $scope.certificate = $uibModalInstance.row.certificate;
       
      
         $scope.key = $uibModalInstance.row.key;
       
      $scope.healthbeat = angular.copy($uibModalInstance.row.healthbeat);
       
      
      $scope.interval = 'minutes_15';
      $scope.data_received = $uibModalInstance.data_received;
    } else {
      
            
              
                $scope.name = '';
              
            
         
       
            
              
                $scope.port = '1024';
              
            
         
       
            
              
                $scope.ssl = 'No';
              
            
         
       
            
              
                $scope.certificate = '/opt/vusmartmaps/vusmartmaps.crt';
              
            
         
       
            
              
                $scope.key = '/opt/vusmartmaps/vusmartmaps.key';
              
            
         
       
           
                  $scope.healthbeat = {};
                  
                      
                        $scope.healthbeat.hb_interval = '300';
                      
                    
                  
                      
                        $scope.healthbeat.cpu = 'Yes';
                      
                    
                  
                      
                        $scope.healthbeat.core = 'Yes';
                      
                    
                  
                      
                        $scope.healthbeat.diskio = 'Yes';
                      
                    
                  
                      
                        $scope.healthbeat.filesys = 'Yes';
                      
                    
                  
                      
                        $scope.healthbeat.fsstat = 'Yes';
                      
                    
                  
                      
                        $scope.healthbeat.memory = 'Yes';
                      
                    
                  
                      
                        $scope.healthbeat.network = 'Yes';
                      
                    
                  
                      
                        $scope.healthbeat.process = 'Yes';
                      
                    
                  
                      
                        $scope.healthbeat.process_summary = 'Yes';
                      
                    
                  $scope.healthbeat.processes = [];
                    
                  
                
              
           
           
        
       

      $scope.data_received = false;
      $scope.interval = 'minutes_15';
    }
 
    
   
   
   
   
   
     
   


    
        
        
        
        
        
               
                     
                     
                     
                     
                     
                     
                     
                     
                     
                     $scope.new_processes = [];
    $scope.add_processes = () => {
        var new_obj = {
            
            
            process: '',
                   
                
            
            };
        
        $scope.new_processes.push(new_obj);
    };

    $scope.delete_processes = (row) => {
         $scope.healthbeat.processes = _.without($scope.healthbeat.processes, row);
    };

    $scope.delete_new_processes = (row) => {
         $scope.new_processes = _.without($scope.new_processes, row);
    };

                        
                     
                  
               
               
            
        
    

    // Function called when Save&Continue button is clicked
    $scope.saveDataSource = (isValid) => {
      if( isValid ) {
        // Create an object from current values..
        
        $scope.data_obj.name = $scope.name;
        
        
        $scope.data_obj.port = $scope.port;
        
        
        $scope.data_obj.ssl = $scope.ssl;
        
        
        $scope.data_obj.certificate = $scope.certificate;
        
        
        $scope.data_obj.key = $scope.key;
        
        
           
            $scope.data_obj.healthbeat = {};
                 
        $scope.data_obj.healthbeat.hb_interval = $scope.healthbeat.hb_interval;
                    
                 
        $scope.data_obj.healthbeat.cpu = $scope.healthbeat.cpu;
                    
                 
        $scope.data_obj.healthbeat.core = $scope.healthbeat.core;
                    
                 
        $scope.data_obj.healthbeat.diskio = $scope.healthbeat.diskio;
                    
                 
        $scope.data_obj.healthbeat.filesys = $scope.healthbeat.filesys;
                    
                 
        $scope.data_obj.healthbeat.fsstat = $scope.healthbeat.fsstat;
                    
                 
        $scope.data_obj.healthbeat.memory = $scope.healthbeat.memory;
                    
                 
        $scope.data_obj.healthbeat.network = $scope.healthbeat.network;
                    
                 
        $scope.data_obj.healthbeat.process = $scope.healthbeat.process;
                    
                 
        $scope.data_obj.healthbeat.process_summary = $scope.healthbeat.process_summary;
                    
                 $scope.data_obj.healthbeat.processes = $scope.healthbeat.processes = $scope.healthbeat.processes.concat($scope.new_processes);
                    
                 
              
            
            
           
        
        

        
        
        
        
        
        
           
                 
                 
                 
                 
                 
                 
                 
                 
                 
                 $scope.new_processes = [];
                    
                 
              
           
           
        
        
        

        // If row already exist, we need to figure out if something has really
        // changed
        if ($uibModalInstance.row) {
            StateService.updateDataSources('healthbeat', $scope.name, $scope.data_obj).then(function() {
                $uibModalInstance.row.name = $scope.name;
                $uibModalInstance.row.port = $scope.port;
                $uibModalInstance.row.ssl = $scope.ssl;
                $uibModalInstance.row.certificate = $scope.certificate;
                $uibModalInstance.row.key = $scope.key;
                $uibModalInstance.row.healthbeat = $scope.healthbeat;
                
                $uibModalInstance.data_receive_list.splice($uibModalInstance.data.indexOf($uibModalInstance.row), 1);
                $uibModalInstance.data = _.without($uibModalInstance.data, $uibModalInstance.row);
                $uibModalInstance.data.push($scope.data_obj);
                $uibModalInstance.data_receive_list.push(false);
                $scope.data_saved = true;
                $scope.third_step = true;
                   $scope.second_step = false;
                
            });
        } else {
            // Normal add
            StateService.addDataSources('healthbeat', $scope.name, $scope.data_obj).then(function() {
                $uibModalInstance.row = {};
                $uibModalInstance.row.name = $scope.name;
                $uibModalInstance.row.port = $scope.port;
                $uibModalInstance.row.ssl = $scope.ssl;
                $uibModalInstance.row.certificate = $scope.certificate;
                $uibModalInstance.row.key = $scope.key;
                $uibModalInstance.row.healthbeat = $scope.healthbeat;
                
                $uibModalInstance.data.push($scope.data_obj);
                $uibModalInstance.data_receive_list.push(false);
                $scope.data_saved = true;
                $scope.third_step = true;
                   $scope.second_step = false;
                
            });
        }
      }
    };

    // function called when clicked on 'cancel' button
    $scope.cancel = () => {
      $uibModalInstance.dismiss('cancel');
    };

    $scope.refreshDataSource = () => {
        // Make a query and get the data from backend based on interval
        StateService.refreshDataSouce('healthbeat', $scope.name, '', $scope.interval).then(function(data) {
        
            $scope.data_received = data.data_received;
        });
    };

    $scope.downloadDataSourceAgentConfiguration = (environment) => {
        var data_obj = {};
        data_obj.name = $scope.name;
        data_obj.port = $scope.port;
        data_obj.ssl = $scope.ssl;
        data_obj.certificate = $scope.certificate;
        data_obj.key = $scope.key;
        data_obj.healthbeat = $scope.healthbeat;
        
        StateService.downloadDataSourceAgentConfiguration('healthbeat', $scope.name, environment, data_obj).then(function() {
         });
     };

     $scope.downloadDataSourceAgent = (environment) => {
        var data_obj = {};
        data_obj.name = $scope.name;
        data_obj.port = $scope.port;
        data_obj.ssl = $scope.ssl;
        data_obj.certificate = $scope.certificate;
        data_obj.key = $scope.key;
        data_obj.healthbeat = $scope.healthbeat;
        
        StateService.downloadDataSourceAgent('healthbeat', $scope.name, environment, data_obj).then(function() {
         });
     };

    

    $scope.closeDataSource = () => {
        $uibModalInstance.close($scope.data_obj);
    };
  }
}

healthbeatAddDataSourceCtrl.$inject = ['$scope', 'StateService', '$uibModalInstance'];

export default healthbeatAddDataSourceCtrl;