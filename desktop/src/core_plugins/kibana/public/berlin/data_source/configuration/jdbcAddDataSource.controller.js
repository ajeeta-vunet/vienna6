// This file is automatically generated using pluto meta-file framework
// Please do not make any change in this file directly.
const  angular = require('angular');

import _ from 'lodash';
class jdbcAddDataSourceCtrl {
  constructor($scope, StateService, $uibModalInstance) {

    $scope.editDataSource = false;
    $scope.dataObj = {};
    $scope.first_step = $uibModalInstance.first_step;
    $scope.second_step = $uibModalInstance.second_step;
    $scope.third_step = $uibModalInstance.third_step;
    $scope.index = $uibModalInstance.index;
    $scope.data = $uibModalInstance.data;
























    // if row is present then, edit modal function is called.
    if ($uibModalInstance.row) {
      $scope.editDataSource = true;

      $scope.name = $uibModalInstance.row.name;


      $scope.driverlibrary = $uibModalInstance.row.driverlibrary;


      $scope.jdbc_driverclass = $uibModalInstance.row.jdbc_driverclass;


      $scope.connection = $uibModalInstance.row.connection;


      $scope.user = $uibModalInstance.row.user;


      $scope.password = $uibModalInstance.row.password;


      $scope.metaDataPath = $uibModalInstance.row.metaDataPath;


      $scope.jdbc_schedule = $uibModalInstance.row.jdbc_schedule;

      $scope.query = angular.copy($uibModalInstance.row.query);


      $scope.additionalconfiguration = $uibModalInstance.row.additionalconfiguration;


      $scope.interval = 'minutes_15';
      $scope.dataReceived = $uibModalInstance.dataReceived;
    } else {



      $scope.name = '';






      $scope.driverlibrary = '';






      $scope.jdbc_driverclass = '';






      $scope.connection = '';






      $scope.user = '';






      $scope.password = '';






      $scope.metaDataPath = '';






      $scope.jdbc_schedule = '';





      $scope.query = [];








      $scope.additionalconfiguration = '';





      $scope.dataReceived = false;
      $scope.interval = 'minutes_15';
    }










    $scope.new_query = [];
    $scope.add_query = () => {
      const newObj = {
        query_file: '',
        query_doctype: '',

      };
      $scope.new_query.push(newObj);
    };
    $scope.delete_query = (row) => {
      $scope.query = _.without($scope.query, row);
    };

    $scope.delete_new_query = (row) => {
      $scope.new_query = _.without($scope.new_query, row);
    };








    // Function called when Save&Continue button is clicked
    $scope.saveDataSource = (isValid) => {
      if(isValid) {
        // Create an object from current values..

        $scope.dataObj.name = $scope.name;


        $scope.dataObj.driverlibrary = $scope.driverlibrary;


        $scope.dataObj.jdbc_driverclass = $scope.jdbc_driverclass;


        $scope.dataObj.connection = $scope.connection;


        $scope.dataObj.user = $scope.user;


        $scope.dataObj.password = $scope.password;


        $scope.dataObj.metaDataPath = $scope.metaDataPath;


        $scope.dataObj.jdbc_schedule = $scope.jdbc_schedule;


        $scope.dataObj.query = $scope.query = $scope.query.concat($scope.new_query);
        $scope.new_query = [];



        $scope.dataObj.additionalconfiguration = $scope.additionalconfiguration;





        // If row already exist, we need to figure out if something has really
        // changed
        if ($uibModalInstance.row) {
          StateService.updateDataSources('jdbc', $scope.name, $scope.dataObj).then(function () {
            $uibModalInstance.row.name = $scope.name;
            $uibModalInstance.row.driverlibrary = $scope.driverlibrary;
            $uibModalInstance.row.jdbc_driverclass = $scope.jdbc_driverclass;
            $uibModalInstance.row.connection = $scope.connection;
            $uibModalInstance.row.user = $scope.user;
            $uibModalInstance.row.password = $scope.password;
            $uibModalInstance.row.metaDataPath = $scope.metaDataPath;
            $uibModalInstance.row.jdbc_schedule = $scope.jdbc_schedule;
            $uibModalInstance.row.query = $scope.query;
            $uibModalInstance.row.additionalconfiguration = $scope.additionalconfiguration;

            $uibModalInstance.data_receive_list.splice($uibModalInstance.data.indexOf($uibModalInstance.row), 1);
            $uibModalInstance.data = _.without($uibModalInstance.data, $uibModalInstance.row);
            $uibModalInstance.data.push($scope.dataObj);
            $uibModalInstance.data_receive_list.push(false);
            $scope.data_saved = true;

            $scope.first_step = false;
            $scope.second_step = true;

          });
        } else {
          // Normal add
          StateService.addDataSources('jdbc', $scope.name, $scope.dataObj).then(function () {
            $uibModalInstance.row = {};
            $uibModalInstance.row.name = $scope.name;
            $uibModalInstance.row.driverlibrary = $scope.driverlibrary;
            $uibModalInstance.row.jdbc_driverclass = $scope.jdbc_driverclass;
            $uibModalInstance.row.connection = $scope.connection;
            $uibModalInstance.row.user = $scope.user;
            $uibModalInstance.row.password = $scope.password;
            $uibModalInstance.row.metaDataPath = $scope.metaDataPath;
            $uibModalInstance.row.jdbc_schedule = $scope.jdbc_schedule;
            $uibModalInstance.row.query = $scope.query;
            $uibModalInstance.row.additionalconfiguration = $scope.additionalconfiguration;

            $uibModalInstance.data.push($scope.dataObj);
            $uibModalInstance.data_receive_list.push(false);
            $scope.data_saved = true;

            $scope.first_step = false;
            $scope.second_step = true;

          });
        }
      }
    };

    // function called when clicked on 'cancel' button
    $scope.cancel = () => {
      $uibModalInstance.dismiss('cancel');
    };

    $scope.refreshDataSource = () => {
      // Make a query and get the data from backend based on interval
      StateService.refreshDataSouce('jdbc', $scope.name, '', $scope.interval).then(function (data) {

        $scope.dataReceived = data.dataReceived;
      });
    };



    $scope.closeDataSource = () => {
      $uibModalInstance.close($scope.dataObj);
    };
  }
}

jdbcAddDataSourceCtrl.$inject = ['$scope', 'StateService', '$uibModalInstance'];
/*eslint-disable*/
export default jdbcAddDataSourceCtrl;
/*eslint-enable*/
