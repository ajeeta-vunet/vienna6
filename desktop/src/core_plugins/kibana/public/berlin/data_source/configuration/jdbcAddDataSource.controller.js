// This file is automatically generated using pluto meta-file framework
// Please do not make any change in this file directly.
'use strict';
import _ from 'lodash';
class jdbcAddDataSourceCtrl {
  constructor ($scope, StateService, $uibModalInstance) {

    $scope.editDataSource = false;
    $scope.data_obj = {};
    $scope.first_step = $uibModalInstance.first_step;
    $scope.second_step = $uibModalInstance.second_step;
    $scope.third_step = $uibModalInstance.third_step;
    $scope.index = $uibModalInstance.index;
    $scope.data = $uibModalInstance.data;
    

    
       
    
       
    
       
    
       
    
       
    
       
    
       
    
       
    
    
       
    

    $scope.vendorList = [];
    $scope.deviceList = [];  
    // get the device and vendor information
    StateService.getVendorAndDeviceList().then(function (data) {
      $scope.vendorList = data.vendor_list;
      $scope.deviceList = data.device_list;
    });


    // if row is present then, edit modal function is called.
    if ($uibModalInstance.row) {
      $scope.editDataSource = true;
      
         $scope.name = $uibModalInstance.row.name;
       
      
         $scope.driverlibrary = $uibModalInstance.row.driverlibrary;
       
      
         $scope.jdbc_driverclass = $uibModalInstance.row.jdbc_driverclass;
       
      
         $scope.connection = $uibModalInstance.row.connection;
       
      
         $scope.user = $uibModalInstance.row.user;
       
      
         $scope.password = $uibModalInstance.row.password;
       
      
         $scope.metaDataPath = $uibModalInstance.row.metaDataPath;
       
      
         $scope.jdbc_schedule = $uibModalInstance.row.jdbc_schedule;
       
      $scope.query = angular.copy($uibModalInstance.row.query);
       
      
         $scope.additionalconfiguration = $uibModalInstance.row.additionalconfiguration;
       
      
      $scope.interval = 'minutes_15';
      $scope.data_received = $uibModalInstance.data_received;
    } else {
      
            
              
                $scope.name = '';
              
            
         
       
            
              
                $scope.driverlibrary = '';
              
            
         
       
            
              
                $scope.jdbc_driverclass = '';
              
            
         
       
            
              
                $scope.connection = '';
              
            
         
       
            
              
                $scope.user = '';
              
            
         
       
            
              
                $scope.password = '';
              
            
         
       
            
              
                $scope.metaDataPath = '';
              
            
         
       
            
              
                $scope.jdbc_schedule = '';
              
            
         
       
           
                       $scope.query = [];
                    
                
              
           
        
       
            
              
                $scope.additionalconfiguration = '';
              
            
         
       

      $scope.data_received = false;
      $scope.interval = 'minutes_15';
    }
 
    
   
   
   
   
   
   
   
   
           $scope.new_query = [];
           $scope.add_query = () => {
                var new_obj = {
                    query_file: '',
                    query_doctype: '',
                    
                 };
                 $scope.new_query.push(new_obj);
             };
               $scope.delete_query = (row) => {
                  $scope.query = _.without($scope.query, row);
             };

             $scope.delete_new_query = (row) => {
                  $scope.new_query = _.without($scope.new_query, row);
             };
       
     
   
   


    

    // Function called when Save&Continue button is clicked
    $scope.saveDataSource = (isValid) => {
      if( isValid ) {
        // Create an object from current values..
        
        $scope.data_obj.name = $scope.name;
        
        
        $scope.data_obj.driverlibrary = $scope.driverlibrary;
        
        
        $scope.data_obj.jdbc_driverclass = $scope.jdbc_driverclass;
        
        
        $scope.data_obj.connection = $scope.connection;
        
        
        $scope.data_obj.user = $scope.user;
        
        
        $scope.data_obj.password = $scope.password;
        
        
        $scope.data_obj.metaDataPath = $scope.metaDataPath;
        
        
        $scope.data_obj.jdbc_schedule = $scope.jdbc_schedule;
        
        
           $scope.data_obj.query = $scope.query = $scope.query.concat($scope.new_query);
              $scope.new_query = [];
           
        
        
        $scope.data_obj.additionalconfiguration = $scope.additionalconfiguration;
        
        

        

        // If row already exist, we need to figure out if something has really
        // changed
        if ($uibModalInstance.row) {
            StateService.updateDataSources('jdbc', $scope.name, $scope.data_obj).then(function() {
                $uibModalInstance.row.name = $scope.name;
                $uibModalInstance.row.driverlibrary = $scope.driverlibrary;
                $uibModalInstance.row.jdbc_driverclass = $scope.jdbc_driverclass;
                $uibModalInstance.row.connection = $scope.connection;
                $uibModalInstance.row.user = $scope.user;
                $uibModalInstance.row.password = $scope.password;
                $uibModalInstance.row.metaDataPath = $scope.metaDataPath;
                $uibModalInstance.row.jdbc_schedule = $scope.jdbc_schedule;
                $uibModalInstance.row.query = $scope.query;
                $uibModalInstance.row.additionalconfiguration = $scope.additionalconfiguration;
                
                $uibModalInstance.data_receive_list.splice($uibModalInstance.data.indexOf($uibModalInstance.row), 1);
                $uibModalInstance.data = _.without($uibModalInstance.data, $uibModalInstance.row);
                $uibModalInstance.data.push($scope.data_obj);
                $uibModalInstance.data_receive_list.push(false);
                $scope.data_saved = true;
                
                   $scope.first_step = false;
                   $scope.second_step = true;
                
            });
        } else {
            // Normal add
            StateService.addDataSources('jdbc', $scope.name, $scope.data_obj).then(function() {
                $uibModalInstance.row = {};
                $uibModalInstance.row.name = $scope.name;
                $uibModalInstance.row.driverlibrary = $scope.driverlibrary;
                $uibModalInstance.row.jdbc_driverclass = $scope.jdbc_driverclass;
                $uibModalInstance.row.connection = $scope.connection;
                $uibModalInstance.row.user = $scope.user;
                $uibModalInstance.row.password = $scope.password;
                $uibModalInstance.row.metaDataPath = $scope.metaDataPath;
                $uibModalInstance.row.jdbc_schedule = $scope.jdbc_schedule;
                $uibModalInstance.row.query = $scope.query;
                $uibModalInstance.row.additionalconfiguration = $scope.additionalconfiguration;
                
                $uibModalInstance.data.push($scope.data_obj);
                $uibModalInstance.data_receive_list.push(false);
                $scope.data_saved = true;
                
                   $scope.first_step = false;
                   $scope.second_step = true;
                
            });
        }
      }
    };

    // function called when clicked on 'cancel' button
    $scope.cancel = () => {
      $uibModalInstance.dismiss('cancel');
    };

    $scope.refreshDataSource = () => {
        // Make a query and get the data from backend based on interval
        StateService.refreshDataSouce('jdbc', $scope.name, '', $scope.interval).then(function(data) {
        
            $scope.data_received = data.data_received;
        });
    };

    

    $scope.closeDataSource = () => {
        $uibModalInstance.close($scope.data_obj);
    };
  }
}

jdbcAddDataSourceCtrl.$inject = ['$scope', 'StateService', '$uibModalInstance'];

export default jdbcAddDataSourceCtrl;