// This file is automatically generated using pluto meta-file framework
// Please do not make any change in this file directly.
'use strict';
import _ from 'lodash';
class tracepathbeatAddDataSourceCtrl {
  constructor ($scope, StateService, $uibModalInstance) {

    $scope.editDataSource = false;
    $scope.data_obj = {};
    $scope.first_step = $uibModalInstance.first_step;
    $scope.second_step = $uibModalInstance.second_step;
    $scope.third_step = $uibModalInstance.third_step;
    $scope.index = $uibModalInstance.index;
    $scope.data = $uibModalInstance.data;
    $scope.fourth_step = $uibModalInstance.fourth_step;
    

    
       
    
    
    $scope.standalone_shipper_list = [];
             StateService.getStandaloneShipperList().then(function(standalone_shipper_list) {
                 $scope.standalone_shipper_list = standalone_shipper_list;
                 if (!$scope.editDataSource && standalone_shipper_list.length > 0) {
                     $scope.standalone_shipper = standalone_shipper_list[0];
                 }
             });
          
       
    
    

    $scope.vendorList = [];
    $scope.deviceList = [];  
    // get the device and vendor information
    StateService.getVendorAndDeviceList().then(function (data) {
      $scope.vendorList = data.vendor_list;
      $scope.deviceList = data.device_list;
    });


    // if row is present then, edit modal function is called.
    if ($uibModalInstance.row) {
      $scope.editDataSource = true;
      
         $scope.name = $uibModalInstance.row.name;
       
      
         $scope.port = $uibModalInstance.row.port;
       
      
         $scope.run_in_shipper = $uibModalInstance.row.run_in_shipper;
       
      
         $scope.standalone_shipper = $uibModalInstance.row.standalone_shipper;
       
      $scope.tp_tracepathbeat = angular.copy($uibModalInstance.row.tp_tracepathbeat);
       
      
      $scope.interval = 'minutes_15';
      $scope.data_received = $uibModalInstance.data_received;
    } else {
      
            
              
                $scope.name = '';
              
            
         
       
            
              
                $scope.port = '1024';
              
            
         
       
            
              
                $scope.run_in_shipper = 'No';
              
            
         
       
            
              
                $scope.standalone_shipper = '127.0.0.1';
              
            
         
       
           
                  $scope.tp_tracepathbeat = {};
                  
                      
                        $scope.tp_tracepathbeat.tp_interval = '300';
                      
                    
                  
                      
                        $scope.tp_tracepathbeat.tp_usemtr = 'Yes';
                      
                    
                  
                      
                        $scope.tp_tracepathbeat.tp_usetcpsyn = 'No';
                      
                    
                  
                      
                        $scope.tp_tracepathbeat.tp_probecount = '3';
                      
                    
                  
                      
                        $scope.tp_tracepathbeat.tp_overall_timeout = '30000';
                      
                    
                  
                      
                        $scope.tp_tracepathbeat.tp_sleep_after_every_n_target = '10';
                      
                    
                  
                      
                        $scope.tp_tracepathbeat.tp_sleep_for_after_every_n_target = '2000';
                      
                    
                  $scope.tp_tracepathbeat.tp_target = [];
                    
                  
                
              
           
           
        
       

      $scope.data_received = false;
      $scope.interval = 'minutes_15';
    }
 
    
   
   
   
   
     
   


    
        
        
        
        
               
                     
                     
                     
                     
                     
                     
                     $scope.new_tp_target = [];
    $scope.add_tp_target = () => {
        var new_obj = {
            
            
            tp_target_address: '',
                   
                
            
            };
        
        $scope.new_tp_target.push(new_obj);
    };

    $scope.delete_tp_target = (row) => {
         $scope.tp_tracepathbeat.tp_target = _.without($scope.tp_tracepathbeat.tp_target, row);
    };

    $scope.delete_new_tp_target = (row) => {
         $scope.new_tp_target = _.without($scope.new_tp_target, row);
    };

                        
                     
                  
               
               
            
        
    

    // Function called when Save&Continue button is clicked
    $scope.saveDataSource = (isValid) => {
      if( isValid ) {
        // Create an object from current values..
        
        $scope.data_obj.name = $scope.name;
        
        
        $scope.data_obj.port = $scope.port;
        
        
        $scope.data_obj.run_in_shipper = $scope.run_in_shipper;
        
        
        $scope.data_obj.standalone_shipper = $scope.standalone_shipper;
        
        
           
            $scope.data_obj.tp_tracepathbeat = {};
                 
        $scope.data_obj.tp_tracepathbeat.tp_interval = $scope.tp_tracepathbeat.tp_interval;
                    
                 
        $scope.data_obj.tp_tracepathbeat.tp_usemtr = $scope.tp_tracepathbeat.tp_usemtr;
                    
                 
        $scope.data_obj.tp_tracepathbeat.tp_usetcpsyn = $scope.tp_tracepathbeat.tp_usetcpsyn;
                    
                 
        $scope.data_obj.tp_tracepathbeat.tp_probecount = $scope.tp_tracepathbeat.tp_probecount;
                    
                 
        $scope.data_obj.tp_tracepathbeat.tp_overall_timeout = $scope.tp_tracepathbeat.tp_overall_timeout;
                    
                 
        $scope.data_obj.tp_tracepathbeat.tp_sleep_after_every_n_target = $scope.tp_tracepathbeat.tp_sleep_after_every_n_target;
                    
                 
        $scope.data_obj.tp_tracepathbeat.tp_sleep_for_after_every_n_target = $scope.tp_tracepathbeat.tp_sleep_for_after_every_n_target;
                    
                 $scope.data_obj.tp_tracepathbeat.tp_target = $scope.tp_tracepathbeat.tp_target = $scope.tp_tracepathbeat.tp_target.concat($scope.new_tp_target);
                    
                 
              
            
            
           
        
        

        
        
        
        
        
           
                 
                 
                 
                 
                 
                 
                 $scope.new_tp_target = [];
                    
                 
              
           
           
        
        
        

        // If row already exist, we need to figure out if something has really
        // changed
        if ($uibModalInstance.row) {
            StateService.updateDataSources('tracepathbeat', $scope.name, $scope.data_obj).then(function() {
                $uibModalInstance.row.name = $scope.name;
                $uibModalInstance.row.port = $scope.port;
                $uibModalInstance.row.run_in_shipper = $scope.run_in_shipper;
                $uibModalInstance.row.standalone_shipper = $scope.standalone_shipper;
                $uibModalInstance.row.tp_tracepathbeat = $scope.tp_tracepathbeat;
                
                $uibModalInstance.data_receive_list.splice($uibModalInstance.data.indexOf($uibModalInstance.row), 1);
                $uibModalInstance.data = _.without($uibModalInstance.data, $uibModalInstance.row);
                $uibModalInstance.data.push($scope.data_obj);
                $uibModalInstance.data_receive_list.push(false);
                $scope.data_saved = true;
                $scope.third_step = true;
                   $scope.second_step = false;
                
            });
        } else {
            // Normal add
            StateService.addDataSources('tracepathbeat', $scope.name, $scope.data_obj).then(function() {
                $uibModalInstance.row = {};
                $uibModalInstance.row.name = $scope.name;
                $uibModalInstance.row.port = $scope.port;
                $uibModalInstance.row.run_in_shipper = $scope.run_in_shipper;
                $uibModalInstance.row.standalone_shipper = $scope.standalone_shipper;
                $uibModalInstance.row.tp_tracepathbeat = $scope.tp_tracepathbeat;
                
                $uibModalInstance.data.push($scope.data_obj);
                $uibModalInstance.data_receive_list.push(false);
                $scope.data_saved = true;
                $scope.third_step = true;
                   $scope.second_step = false;
                
            });
        }
      }
    };

    // function called when clicked on 'cancel' button
    $scope.cancel = () => {
      $uibModalInstance.dismiss('cancel');
    };

    $scope.refreshDataSource = () => {
        // Make a query and get the data from backend based on interval
        StateService.refreshDataSouce('tracepathbeat', $scope.name, '', $scope.interval).then(function(data) {
        
            $scope.data_received = data.data_received;
        });
    };

    $scope.downloadDataSourceAgentConfiguration = (environment) => {
        var data_obj = {};
        data_obj.name = $scope.name;
        data_obj.port = $scope.port;
        data_obj.run_in_shipper = $scope.run_in_shipper;
        data_obj.standalone_shipper = $scope.standalone_shipper;
        data_obj.tp_tracepathbeat = $scope.tp_tracepathbeat;
        
        StateService.downloadDataSourceAgentConfiguration('tracepathbeat', $scope.name, environment, data_obj).then(function() {
         });
     };

     $scope.downloadDataSourceAgent = (environment) => {
        var data_obj = {};
        data_obj.name = $scope.name;
        data_obj.port = $scope.port;
        data_obj.run_in_shipper = $scope.run_in_shipper;
        data_obj.standalone_shipper = $scope.standalone_shipper;
        data_obj.tp_tracepathbeat = $scope.tp_tracepathbeat;
        
        StateService.downloadDataSourceAgent('tracepathbeat', $scope.name, environment, data_obj).then(function() {
         });
     };

    

    $scope.closeDataSource = () => {
        $uibModalInstance.close($scope.data_obj);
    };
  }
}

tracepathbeatAddDataSourceCtrl.$inject = ['$scope', 'StateService', '$uibModalInstance'];

export default tracepathbeatAddDataSourceCtrl;